name: Deploy Frontend

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'  # Only trigger when frontend changes
  workflow_dispatch:  # Allow manual triggering

jobs:
  frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install & Build Frontend
        run: |
          cd frontend
          rm -rf node_modules package-lock.json
          npm install
          # Ensure rollup native binary is properly installed
          npm install @rollup/rollup-linux-x64-gnu --save-optional || true
          # Debug: Check if rollup binary exists
          ls -la node_modules/@rollup/ || echo "No @rollup directory found"
          npm run build

      - name: Rename _htaccess to .htaccess
        run: mv frontend/dist/_htaccess frontend/dist/.htaccess

      - name: Frontend Build Summary
        run: |
          echo "Frontend build completed:"
          echo "Build size: $(du -sh frontend/dist | cut -f1)"
          echo "Build files: $(find frontend/dist -type f | wc -l)"

      - name: Deploy Frontend via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./frontend/dist/
          server-dir: /public_html/floorlive_frontend/
          # Use git-based comparison for incremental uploads
          state-name: frontend-deploy-state
          dry-run: false
          # Exclude development files
          exclude: |
            **/.DS_Store
            **/Thumbs.db
            **/*.tmp
            **/*.temp
          # Log details for debugging
          log-level: verbose

      - name: Frontend Deployment Summary
        run: |
          echo "üé® Frontend deployment completed!"
          echo "üìÅ Deployed: $(find frontend/dist -type f | wc -l) files"
          echo "üìä Size: $(du -sh frontend/dist | cut -f1)"
          echo "üïí Timestamp: $(date)"