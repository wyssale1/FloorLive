---
interface Props {
  game: {
    id: number;
    homeTeam: string;
    awayTeam: string;
    homeLogo: string;
    awayLogo: string;
    league: string;
    homeScore?: number;
    awayScore?: number;
    startTime?: string;
    date?: string;
    period?: string;
    timeRemaining?: string;
  };
  type: "live" | "upcoming" | "recent";
  showBorder?: boolean;
}

const { game, type, showBorder = true } = Astro.props;

// Generate team logo placeholder
function getLogoPlaceholder(teamName: string) {
  const initials = teamName.split(' ')
    .map(word => word[0])
    .join('')
    .substring(0, 2)
    .toUpperCase();
  return initials;
}
---

<a href={`/games/${game.id}`} class="block">
  <div class="rounded-lg border bg-card text-card-foreground shadow-sm hover:shadow-md transition-all duration-200 p-4">
    <div class="flex items-center justify-between">
      <!-- Left side: Teams -->
      <div class="flex-1 min-w-0">
        <div class="flex items-center space-x-3 mb-2">
          {game.homeLogo ? (
            <img src={game.homeLogo} alt={game.homeTeam} class="w-6 h-6 rounded-full shrink-0" />
          ) : (
            <div class="w-6 h-6 rounded-full bg-muted flex items-center justify-center shrink-0">
              <span class="text-xs font-medium text-muted-foreground">
                {getLogoPlaceholder(game.homeTeam)}
              </span>
            </div>
          )}
          <span class={`text-sm truncate ${type === "recent" ? "text-muted-foreground" : "font-medium"}`}>
            {game.homeTeam}
          </span>
          {(type === "live" || type === "recent") && (
            <span class={`text-lg font-bold ${type === "recent" ? "text-muted-foreground" : "text-primary"}`}>
              {game.homeScore}
            </span>
          )}
        </div>
        
        <div class="flex items-center space-x-3">
          {game.awayLogo ? (
            <img src={game.awayLogo} alt={game.awayTeam} class="w-6 h-6 rounded-full shrink-0" />
          ) : (
            <div class="w-6 h-6 rounded-full bg-muted flex items-center justify-center shrink-0">
              <span class="text-xs font-medium text-muted-foreground">
                {getLogoPlaceholder(game.awayTeam)}
              </span>
            </div>
          )}
          <span class={`text-sm truncate ${type === "recent" ? "text-muted-foreground" : "font-medium"}`}>
            {game.awayTeam}
          </span>
          {(type === "live" || type === "recent") && (
            <span class={`text-lg font-bold ${type === "recent" ? "text-muted-foreground" : "text-primary"}`}>
              {game.awayScore}
            </span>
          )}
        </div>
      </div>

      <!-- Right side: Status/Info -->
      <div class="text-right ml-4 shrink-0">
        {type === "live" && (
          <div class="space-y-1">
            <div class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-destructive text-destructive-foreground">
              ðŸ”´ LIVE
            </div>
            <div class="text-xs text-muted-foreground">{game.period}</div>
            {game.timeRemaining && (
              <div class="text-xs text-muted-foreground">{game.timeRemaining}</div>
            )}
          </div>
        )}
        
        {type === "upcoming" && (
          <div class="space-y-1">
            <div class="text-sm font-medium">{game.startTime}</div>
            <div class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-secondary text-secondary-foreground">
              {game.league}
            </div>
          </div>
        )}
        
        {type === "recent" && (
          <div class="space-y-1">
            <div class="text-xs text-muted-foreground">{game.date}</div>
            <div class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-muted text-muted-foreground">
              {game.league}
            </div>
          </div>
        )}
      </div>
    </div>
  </div>
</a>